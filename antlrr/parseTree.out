
Found the following formulas of type '$world':
- world_0_decl
- world_1_decl
- world_2_decl
- world_3_decl
- world_4_decl
- world_5_decl
- world_6_decl
(tptp_file (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word semantics)) , (formula_role logic) , (tff_formula (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_constant (defined_functor (atomic_defined_word $alethic_modal)))))))) )))) (annotations == ( [ ( $domains ) == ( $constant ) , ( $designation ) == ( $rigid ) , ( $terms ) == ( $local ) , ( $modalities ) == ( $modal_system_M ) ] )) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word fruit_type)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word fruit)))) : (tff_top_level_type (tff_atomic_type (defined_type (atomic_defined_word $tType)))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word apple_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word apple)))) : (tff_top_level_type (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word banana_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word banana)))) : (tff_top_level_type (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word healthy_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word healthy)))) : (tff_top_level_type (tff_non_atomic_type ( (tff_non_atomic_type (tff_mapping_type (tff_unitary_type (tff_atomic_type ( (tff_atomic_type (type_constant (type_functor (atomic_word fruit)))) ))) > (tff_atomic_type (defined_type (atomic_defined_word $o))))) ))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word rotten_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word rotten)))) : (tff_top_level_type (tff_non_atomic_type ( (tff_non_atomic_type (tff_mapping_type (tff_unitary_type (tff_atomic_type ( (tff_atomic_type (type_constant (type_functor (atomic_word fruit)))) ))) > (tff_atomic_type (defined_type (atomic_defined_word $o))))) ))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word d_fruit_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word d_fruit)))) : (tff_top_level_type (tff_atomic_type (defined_type (atomic_defined_word $tType)))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word d2fruit_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word d2fruit)))) : (tff_top_level_type (tff_non_atomic_type (tff_mapping_type (tff_unitary_type (tff_atomic_type (type_constant (type_functor (atomic_word d_fruit))))) > (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word d_fruit_0_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word d_fruit_0)))) : (tff_top_level_type (tff_atomic_type (type_constant (type_functor (atomic_word d_fruit))))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word d_fruit_1_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word d_fruit_1)))) : (tff_top_level_type (tff_atomic_type (type_constant (type_functor (atomic_word d_fruit))))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word world_0_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word world_0)))) : (tff_top_level_type (tff_atomic_type (defined_type (atomic_defined_word $world)))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word world_1_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word world_1)))) : (tff_top_level_type (tff_atomic_type (defined_type (atomic_defined_word $world)))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word world_2_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word world_2)))) : (tff_top_level_type (tff_atomic_type (defined_type (atomic_defined_word $world)))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word world_3_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word world_3)))) : (tff_top_level_type (tff_atomic_type (defined_type (atomic_defined_word $world)))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word world_4_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word world_4)))) : (tff_top_level_type (tff_atomic_type (defined_type (atomic_defined_word $world)))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word world_5_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word world_5)))) : (tff_top_level_type (tff_atomic_type (defined_type (atomic_defined_word $world)))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word world_6_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word world_6)))) : (tff_top_level_type (tff_atomic_type (defined_type (atomic_defined_word $world)))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word model_worlds)) , (formula_role interpretation - (general_term (general_data (atomic_word worlds)))) , (tff_formula (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable W) : (tff_atomic_type (defined_type (atomic_defined_word $world)))))) ] : (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_or_formula (tff_or_formula (tff_or_formula (tff_or_formula (tff_or_formula (tff_or_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable W)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_0)))))))) ))) | (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable W)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))) )))) | (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable W)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))) )))) | (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable W)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))) )))) | (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable W)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))) )))) | (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable W)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))) )))) | (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable W)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))) ))))))) )))))) ))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $distinct)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_0)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1))))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2))))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3))))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4))))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5))))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_constant (defined_functor (atomic_defined_word $local_world))))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))) )))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_0)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_0)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_0)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_0)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_0)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_0)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))))) )))))))))) )))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word model_domains)) , (formula_role interpretation - (general_term (general_data (atomic_word domains)))) , (tff_formula (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $distinct)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_0)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1)))))))))) )))))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable W) : (tff_atomic_type (defined_type (atomic_defined_word $world)))))) ] : (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $in_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable W))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable O) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier ?)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable DO) : (tff_atomic_type (type_constant (type_functor (atomic_word d_fruit))))))) ] : (tff_unit_formula (tff_defined_infix (tff_unitary_term (variable O)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable DO)))))) ))))))))) )))))) ))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable DO1) : (tff_atomic_type (type_constant (type_functor (atomic_word d_fruit)))))) , (tff_variable_list (tff_variable (tff_typed_variable (variable DO2) : (tff_atomic_type (type_constant (type_functor (atomic_word d_fruit)))))))) ] : (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_nonassoc (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable DO1)))))) )))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable DO2)))))) )))))) ))) (nonassoc_connective =>) (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable DO1)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (variable DO2)))) )))))) )))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable DO) : (tff_atomic_type (type_constant (type_functor (atomic_word d_fruit))))))) ] : (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_or_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable DO)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_0)))))))) ))) | (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable DO)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1)))))))) ))))))) )))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier ?)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable DO) : (tff_atomic_type (type_constant (type_functor (atomic_word d_fruit))))))) ] : (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable DO)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_0)))))))) )))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier ?)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable DO) : (tff_atomic_type (type_constant (type_functor (atomic_word d_fruit))))))) ] : (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable DO)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1)))))))) )))))) ))))))) )))))) )))))) )))))) ))))))) )))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word model_mapping)) , (formula_role interpretation - (general_term (general_data (atomic_word mappings)))) , (tff_formula (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $in_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_0)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_and_formula (tff_and_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word apple)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_0))))))))) )))))) ))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word banana)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1))))))))) )))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word healthy)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) )))))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unary_formula (tff_prefix_unary (tff_unary_connective (unary_connective ~)) (tff_preunit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word rotten)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) ))))) ))))))))) ))))))) )))))) )))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $in_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_and_formula (tff_and_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word apple)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_0))))))))) )))))) ))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word banana)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1))))))))) )))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word healthy)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) )))))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unary_formula (tff_prefix_unary (tff_unary_connective (unary_connective ~)) (tff_preunit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word rotten)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) ))))) ))))))))) ))))))) )))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $in_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_and_formula (tff_and_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word apple)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_0))))))))) )))))) ))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word banana)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1))))))))) )))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word healthy)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) )))))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unary_formula (tff_prefix_unary (tff_unary_connective (unary_connective ~)) (tff_preunit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word rotten)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) ))))) ))))))))) ))))))) )))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $in_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_and_formula (tff_and_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word apple)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_0))))))))) )))))) ))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word banana)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1))))))))) )))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word healthy)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) )))))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unary_formula (tff_prefix_unary (tff_unary_connective (unary_connective ~)) (tff_preunit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word rotten)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) ))))) ))))))))) ))))))) )))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $in_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_and_formula (tff_and_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word apple)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_0))))))))) )))))) ))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word banana)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1))))))))) )))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word healthy)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) )))))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unary_formula (tff_prefix_unary (tff_unary_connective (unary_connective ~)) (tff_preunit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word rotten)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) ))))) ))))))))) ))))))) )))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $in_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word apple)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_0))))))))) )))))) ))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word banana)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1))))))))) )))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word healthy)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) )))))))) )))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word rotten)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1))))))))) ))))))) )))))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_nonassoc (tff_unit_formula (tff_unary_formula (tff_prefix_unary (tff_unary_connective (unary_connective ~)) (tff_preunit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable V1)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1))))))))) )))))) ))) )))))) (nonassoc_connective =>) (tff_unit_formula (tff_unary_formula (tff_prefix_unary (tff_unary_connective (unary_connective ~)) (tff_preunit_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word rotten)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) ))))))))))) )))))) ))))))) )))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $in_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_and_formula (tff_and_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word apple)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_0))))))))) )))))) ))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word banana)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1))))))))) )))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word healthy)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) )))))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unary_formula (tff_prefix_unary (tff_unary_connective (unary_connective ~)) (tff_preunit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word rotten)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) ))))) ))))))))) ))))))) )))))) )))))))))) )))) (annotations nothing) ).))) <EOF>)

Found the following formulas of type '$world':
- world_0_decl
- world_1_decl
- world_2_decl
- world_3_decl
- world_4_decl
- world_5_decl
- world_6_decl
(tptp_file (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word semantics)) , (formula_role logic) , (tff_formula (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_constant (defined_functor (atomic_defined_word $alethic_modal)))))))) )))) (annotations == ( [ ( $domains ) == ( $constant ) , ( $designation ) == ( $rigid ) , ( $terms ) == ( $local ) , ( $modalities ) == ( $modal_system_M ) ] )) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word fruit_type)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word fruit)))) : (tff_top_level_type (tff_atomic_type (defined_type (atomic_defined_word $tType)))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word apple_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word apple)))) : (tff_top_level_type (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word banana_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word banana)))) : (tff_top_level_type (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word healthy_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word healthy)))) : (tff_top_level_type (tff_non_atomic_type ( (tff_non_atomic_type (tff_mapping_type (tff_unitary_type (tff_atomic_type ( (tff_atomic_type (type_constant (type_functor (atomic_word fruit)))) ))) > (tff_atomic_type (defined_type (atomic_defined_word $o))))) ))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word rotten_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word rotten)))) : (tff_top_level_type (tff_non_atomic_type ( (tff_non_atomic_type (tff_mapping_type (tff_unitary_type (tff_atomic_type ( (tff_atomic_type (type_constant (type_functor (atomic_word fruit)))) ))) > (tff_atomic_type (defined_type (atomic_defined_word $o))))) ))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word d_fruit_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word d_fruit)))) : (tff_top_level_type (tff_atomic_type (defined_type (atomic_defined_word $tType)))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word d2fruit_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word d2fruit)))) : (tff_top_level_type (tff_non_atomic_type (tff_mapping_type (tff_unitary_type (tff_atomic_type (type_constant (type_functor (atomic_word d_fruit))))) > (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word d_fruit_0_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word d_fruit_0)))) : (tff_top_level_type (tff_atomic_type (type_constant (type_functor (atomic_word d_fruit))))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word d_fruit_1_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word d_fruit_1)))) : (tff_top_level_type (tff_atomic_type (type_constant (type_functor (atomic_word d_fruit))))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word world_0_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word world_0)))) : (tff_top_level_type (tff_atomic_type (defined_type (atomic_defined_word $world)))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word world_1_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word world_1)))) : (tff_top_level_type (tff_atomic_type (defined_type (atomic_defined_word $world)))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word world_2_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word world_2)))) : (tff_top_level_type (tff_atomic_type (defined_type (atomic_defined_word $world)))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word world_3_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word world_3)))) : (tff_top_level_type (tff_atomic_type (defined_type (atomic_defined_word $world)))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word world_4_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word world_4)))) : (tff_top_level_type (tff_atomic_type (defined_type (atomic_defined_word $world)))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word world_5_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word world_5)))) : (tff_top_level_type (tff_atomic_type (defined_type (atomic_defined_word $world)))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word world_6_decl)) , (formula_role type) , (tff_formula (tff_atom_typing (untyped_atom (constant (functor (atomic_word world_6)))) : (tff_top_level_type (tff_atomic_type (defined_type (atomic_defined_word $world)))))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word model_worlds)) , (formula_role interpretation - (general_term (general_data (atomic_word worlds)))) , (tff_formula (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable W) : (tff_atomic_type (defined_type (atomic_defined_word $world)))))) ] : (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_or_formula (tff_or_formula (tff_or_formula (tff_or_formula (tff_or_formula (tff_or_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable W)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_0)))))))) ))) | (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable W)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))) )))) | (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable W)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))) )))) | (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable W)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))) )))) | (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable W)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))) )))) | (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable W)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))) )))) | (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable W)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))) ))))))) )))))) ))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $distinct)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_0)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1))))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2))))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3))))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4))))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5))))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_constant (defined_functor (atomic_defined_word $local_world))))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))) )))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_0)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_0)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_0)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_0)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_0)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_0)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $accessible_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))))) )))))))))) )))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word model_domains)) , (formula_role interpretation - (general_term (general_data (atomic_word domains)))) , (tff_formula (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $distinct)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_0)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1)))))))))) )))))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable W) : (tff_atomic_type (defined_type (atomic_defined_word $world)))))) ] : (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $in_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable W))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable O) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier ?)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable DO) : (tff_atomic_type (type_constant (type_functor (atomic_word d_fruit))))))) ] : (tff_unit_formula (tff_defined_infix (tff_unitary_term (variable O)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable DO)))))) ))))))))) )))))) ))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable DO1) : (tff_atomic_type (type_constant (type_functor (atomic_word d_fruit)))))) , (tff_variable_list (tff_variable (tff_typed_variable (variable DO2) : (tff_atomic_type (type_constant (type_functor (atomic_word d_fruit)))))))) ] : (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_nonassoc (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable DO1)))))) )))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable DO2)))))) )))))) ))) (nonassoc_connective =>) (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable DO1)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (variable DO2)))) )))))) )))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable DO) : (tff_atomic_type (type_constant (type_functor (atomic_word d_fruit))))))) ] : (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_or_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable DO)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_0)))))))) ))) | (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable DO)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1)))))))) ))))))) )))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier ?)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable DO) : (tff_atomic_type (type_constant (type_functor (atomic_word d_fruit))))))) ] : (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable DO)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_0)))))))) )))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier ?)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable DO) : (tff_atomic_type (type_constant (type_functor (atomic_word d_fruit))))))) ] : (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable DO)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1)))))))) )))))) ))))))) )))))) )))))) )))))) ))))))) )))) (annotations nothing) ).))) (tptp_input (annotated_formula (tff_annotated tff( (name (atomic_word model_mapping)) , (formula_role interpretation - (general_term (general_data (atomic_word mappings)))) , (tff_formula (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $in_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_0)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_and_formula (tff_and_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word apple)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_0))))))))) )))))) ))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word banana)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1))))))))) )))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word healthy)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) )))))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unary_formula (tff_prefix_unary (tff_unary_connective (unary_connective ~)) (tff_preunit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word rotten)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) ))))) ))))))))) ))))))) )))))) )))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $in_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_1)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_and_formula (tff_and_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word apple)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_0))))))))) )))))) ))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word banana)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1))))))))) )))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word healthy)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) )))))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unary_formula (tff_prefix_unary (tff_unary_connective (unary_connective ~)) (tff_preunit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word rotten)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) ))))) ))))))))) ))))))) )))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $in_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_2)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_and_formula (tff_and_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word apple)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_0))))))))) )))))) ))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word banana)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1))))))))) )))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word healthy)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) )))))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unary_formula (tff_prefix_unary (tff_unary_connective (unary_connective ~)) (tff_preunit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word rotten)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) ))))) ))))))))) ))))))) )))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $in_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_3)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_and_formula (tff_and_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word apple)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_0))))))))) )))))) ))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word banana)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1))))))))) )))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word healthy)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) )))))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unary_formula (tff_prefix_unary (tff_unary_connective (unary_connective ~)) (tff_preunit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word rotten)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) ))))) ))))))))) ))))))) )))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $in_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_4)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_and_formula (tff_and_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word apple)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_0))))))))) )))))) ))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word banana)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1))))))))) )))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word healthy)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) )))))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unary_formula (tff_prefix_unary (tff_unary_connective (unary_connective ~)) (tff_preunit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word rotten)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) ))))) ))))))))) ))))))) )))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $in_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_5)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_and_formula (tff_and_formula (tff_and_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word apple)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_0))))))))) )))))) ))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word banana)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1))))))))) )))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word healthy)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) )))))))) )))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word rotten)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1))))))))) ))))))) )))))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_nonassoc (tff_unit_formula (tff_unary_formula (tff_prefix_unary (tff_unary_connective (unary_connective ~)) (tff_preunit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (variable V1)) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1))))))))) )))))) ))) )))))) (nonassoc_connective =>) (tff_unit_formula (tff_unary_formula (tff_prefix_unary (tff_unary_connective (unary_connective ~)) (tff_preunit_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word rotten)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) ))))))))))) )))))) ))))))) )))))) ))))))) & (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_defined_atomic (tff_defined_plain (defined_functor (atomic_defined_word $in_world)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word world_6)))))))) (comma_tff_term , (tff_term (tff_logic_formula (tff_unitary_formula ( (tff_logic_formula (tff_binary_formula (tff_binary_assoc (tff_and_formula (tff_and_formula (tff_and_formula (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word apple)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_0))))))))) )))))) ))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_defined_infix (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word banana)))))) (defined_infix_pred (infix_equality =)) (tff_unitary_term (tff_atomic_formula (tff_plain_atomic (functor (atomic_word d2fruit)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (constant (functor (atomic_word d_fruit_1))))))))) )))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word healthy)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) )))))))) )))) & (tff_unit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_quantified_formula (tff_quantifier (fof_quantifier !)) [ (tff_variable_list (tff_variable (tff_typed_variable (variable V1) : (tff_atomic_type (type_constant (type_functor (atomic_word fruit))))))) ] : (tff_unit_formula (tff_unary_formula (tff_prefix_unary (tff_unary_connective (unary_connective ~)) (tff_preunit_formula (tff_unitary_formula ( (tff_logic_formula (tff_unitary_formula (tff_atomic_formula (tff_plain_atomic (functor (atomic_word rotten)) ( (tff_arguments (tff_term (tff_logic_formula (tff_unitary_formula (txf_unitary_formula (variable V1)))))) ))))) ))))))))) ))))))) )))))) )))))))))) )))) (annotations nothing) ).))) <EOF>)
